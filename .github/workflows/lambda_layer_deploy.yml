# This is a basic workflow to help you get started with Actions

name: Lambda_Layer_Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" , "development" ]
    paths: 'lambda_layer/**'

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  get_branch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: List of the GitHub Actions environment variables on Windows
        run: env
        
      - name: Extract branch name
        shell: bash
        run: |
              echo ${GITHUB_REF##*/}
              echo "-----------------"
              echo ${{ github.ref }}
        id: extract_branch
        

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

  dev_deploy:
   runs-on: ubuntu-latest
   environment: devl
   needs: get_branch
   if: ${{ github.ref  == 'refs/heads/development' }}
   env: 
       AWS_DEFAULT_REGION: "us-east-1"
   steps:        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
       - uses: actions/checkout@v3
         with: 
           ref: 'development'
       - name: Run a devl deployment script
              ls -lrt
              cd lambda_layer
              pwd
              cat version.txt
  prod_deploy:
   runs-on: ubuntu-latest
   environment: prod
   needs: get_branch
   if: ${{  github.ref  == 'refs/heads/main' }}
   env: 
       AWS_DEFAULT_REGION: "us-east-1"
   steps:        
       - uses: actions/checkout@v3
         with: 
           ref: 'main'
       - name: Run a production deployment script
         run: |
              ls -lrt
              cd lambda_layer
              pwd
              cat version.txt
